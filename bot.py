from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from datetime import datetime
import random
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = "7661557303:AAFEIiReDyIw-VtQRT7VxqnhVlBTV1WT55M"

# –°–ø–∏—Å–æ–∫ —à—É—Ç–æ–∫
JOKES = [
    "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç –ø—Ä–∏—Ç—è–≥–∏–≤–∞–µ—Ç –±–∞–≥–∏!",
    "–ß—Ç–æ —Å–∫–∞–∑–∞–ª –Ω—É–ª—å –≤–æ—Å—å–º–µ—Ä–∫–µ? '–ù–æ—Ä–º –ø–æ—è—Å–∞!'",
    "–ü–æ—á–µ–º—É Python –Ω–µ –º–æ–∂–µ—Ç –∑–∞–≤–µ—Å—Ç–∏ –¥—Ä—É–∑–µ–π? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –≤—Å–µ–≥–¥–∞ —Ç–µ—Ä—è–µ—Ç self!",
]

# –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üïí –í—Ä–µ–º—è", callback_data="time")],
        [InlineKeyboardButton("üé≠ –®—É—Ç–∫–∞", callback_data="joke")],
        [InlineKeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "time":
        current_time = datetime.now().strftime("%H:%M:%S")
        await query.edit_message_text(f"‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")
    elif query.data == "joke":
        joke = random.choice(JOKES)
        await query.edit_message_text(f"üé≠ {joke}")
    elif query.data == "info":
        info_text = """
        ü§ñ –ú–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
        - –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è
        - –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —à—É—Ç–∫–∏
        - –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!
        """
        await query.edit_message_text(info_text)

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = """
    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥
    /help - –ü–æ–º–æ—â—å –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    /info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    /time - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    /joke - –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
    """
    await update.message.reply_text(help_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    await update.message.reply_text(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {user_text}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")
    await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

def main():
    application = Application.builder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    application.run_polling()

if __name__ == "__main__":
    main()